---
- ansible.builtin.include_role:
    name: base

- name: elastic.gpg
  ansible.builtin.get_url:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    dest: /usr/share/keyrings/elastic.old.gpg
    mode: '0444'
  register: gpg

- name: elastic.gpg dearmor
  ansible.builtin.shell: cat /usr/share/keyrings/elastic.old.gpg | gpg --dearmor -o /usr/share/keyrings/elastic.gpg
  when: gpg.changed

- name: add elasticsearch repo
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/elastic.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main
    state: present

- name: install packages
  ansible.builtin.apt:
    pkg:
    - default-jre
    - elasticsearch
    - kibana
    - logstash
    - nginx
    - apache2
    state: present
    update_cache: yes

- name: configs
  ansible.builtin.template:
    src: "{{ item.file }}"
    dest: "{{ item.dest }}"
  notify: "restart_{{ item.service }}"
  with_items:
  - { file: "elasticsearch.yml", dest: "/etc/elasticsearch/elasticsearch.yml", service: "elasticsearch" }
  - { file: "nginx.conf", dest: "/etc/nginx/sites-available/{{ inventory_hostname }}", service: "nginx" }
  - { file: "logstash-beats.conf", dest: "/etc/logstash/conf.d/02-beats-input.conf", service: "logstash" }
  - { file: "logstash-elasticsearch.conf", dest: "/etc/logstash/conf.d/30-elasticsearch-output.conf", service: "logstash" }
  - { file: "ports.conf", dest: "/etc/apache2/ports.conf", service: "apache2" }

- name: nginx config sites-enabled
  file:
    src: "/etc/nginx/sites-available/{{ inventory_hostname }}"
    dest: "/etc/nginx/sites-enabled/{{ inventory_hostname }}"
    state: link
  notify: "restart_nginx"

- meta: flush_handlers

- name: test logstash
  ansible.builtin.shell: /usr/share/logstash/bin/logstash --path.settings /etc/logstash -t
  become: true
  become_user: logstash
  vars:
    ansible_remote_tmp: /tmp
  register: logstash
  failed_when: '"Config Validation Result: OK. Exiting Logstash" not in logstash.stdout'
  changed_when: false

- name: start services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
  - "elasticsearch"
  - "kibana"
  - "nginx"
  - "logstash"
  - "apache2"

- name: test elasticsearch
  ansible.builtin.uri:
    url: "http://localhost:9200"
    status_code: 200
  register: elastic_uri

- name: debug print elastic_uri
  debug:
    var: elastic_uri

- name: install beats
  ansible.builtin.apt:
    pkg:
    - filebeat
    - metricbeat
#    - packetbeat
#    - auditbeat
#    - hearthbeat
    state: present

- name: filebeat config
  template:
    src: "filebeat.yml"
    dest: "/etc/filebeat/filebeat.yml"
    mode: "0600"
  notify: 
  - setup_filebeat
  - restart_filebeat

- name: metricbeat config
  template:
    src: "metricbeat.yml"
    dest: "/etc/metricbeat/metricbeat.yml"
    mode: "0600"
  notify: 
  - setup_metricbeat
  - restart_metricbeat

#- include_tasks: filebeat-modules.yaml
#  with_items:
#  - "system.yml"
#  - "nginx.yml"

#TODO: this
#- name: setup filebeat - dirty workaround
#  ansible.builtin.shell: >
#    filebeat setup -e -E output.logstash.enabled=false -E output.elasticsearch.hosts=['localhost:9200'] -E setup.kibana.host=localhost:5601
#    && filebeat setup -e --pipelines --modules system -M "system.syslog.enabled=true" -M "system.auth.enabled=true"
#    && filebeat setup -e --pipelines --modules nginx -M "nginx.access.enabled=true" -M "nginx.error.enabled=true"

#- name: setup metricbeat - dirty workaround
#  ansible.builtin.shell: >
#    metricbeat setup -e -E output.logstash.enabled=false -E output.elasticsearch.hosts=['localhost:9200'] -E setup.kibana.host=localhost:5601

- meta: flush_handlers

- name: start filebeat
  ansible.builtin.systemd:
    name: filebeat
    state: started
    enabled: yes

- name: start metricbeat
  ansible.builtin.systemd:
    name: metricbeat
    state: started
    enabled: yes

