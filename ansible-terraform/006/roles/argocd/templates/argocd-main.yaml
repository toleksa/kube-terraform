apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-main
  namespace: argocd
  annotations:                                                                                                                                                                             
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true 
spec:
  destination:
    namespace: argocd
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    repoURL: 'https://github.com/toleksa/kube-system'
    targetRevision: "{{ hostvars.localhost.iac.argocd.targetRevision|default("HEAD") }}"
    path: 'argocd'
    helm:
      values: |
        domain: "{{ hostvars.localhost.iac.name }}.{{ hostvars.localhost.iac.domain|default(default.iac.domain) }}"

        longhorn:
          enabled: {{ hostvars.localhost.iac.argocd.longhorn.enabled|default('true') }}
          ingress:
            enabled: true
            host: "longhorn.{{ hostvars.localhost.iac.name }}.{{ hostvars.localhost.iac.domain|default(default.iac.domain) }}"

        argocd:
          dex:
            enabled: false
          server:
            ingress:
              enabled: true
              https: true
            config:
              repositories: |
                - type: helm
                  name: stable
                  url: https://charts.helm.sh/stable
                - type: helm
                  name: argo-cd
                  url: https://argoproj.github.io/argo-helm
        monitoring:
          enabled: {{ hostvars.localhost.iac.argocd.monitoring.enabled|default('false') }}
        externaldns:
          enabled: {{ hostvars.localhost.iac.argocd.dns.enabled|default('false') }}
          rfc2136:
            host: "{{ hostvars.localhost.iac.argocd.dns.host|default() }}"
            zone: "{{ hostvars.localhost.iac.argocd.dns.zone|default() }}"
            tsigSecret: "{{ hostvars.localhost.iac.argocd.dns.secret|default() }}"
          metrics: {{ hostvars.localhost.iac.argocd.dns.metrics|default(hostvars.localhost.iac.argocd.monitoring.enabled|default('false')) }}

        metallb:
          pools:
          - name: default
            protocol: layer2
            addresses:
{% if hostvars.localhost.iac.argocd.metallb.addresses is defined %}
  {% for address in hostvars.localhost.iac.argocd.metallb.addresses %}
            - "{{ address }}"
  {% endfor %}
{% else %}
            - "{{ ansible_default_ipv4.address + '-' + ansible_default_ipv4.address }}"
{% endif %}
            avoid-buggy-ips: true

        elk:
          enabled: {{ hostvars.localhost.iac.argocd.elk.enabled|default('false') }}

        istio:
          enabled: {{ hostvars.localhost.iac.argocd.istio.enabled|default('false') }}

        neuvector:
          enabled: {{ hostvars.localhost.iac.argocd.neuvector.enabled|default('false') }}

        kubecost:
          enabled: {{ hostvars.localhost.iac.argocd.kubecost.enabled|default('false') }}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PruneLast=false
