---
- name: remove auto-upgrade packages
  ansible.builtin.apt:
    pkg:
    - unattended-upgrades
    - update-notifier
    - update-manager
    state: absent

- name: disable auto-upgrades
  ansible.builtin.copy:
    src: 20auto-upgrades
    dest: /etc/apt/apt.conf.d/20auto-upgrades

- name: Ensure ulimit is set to 1048576
  ansible.builtin.lineinfile:
    dest: /etc/security/limits.conf
    line: "{{ item.line }}"
  with_items:
    - { line: "root soft nofile 1048576" } 
    - { line: "root hard nofile 1048576" } 
    - { line: "* soft nofile 1048576" } 
    - { line: "* hard nofile 1048576" } 

- name: Setting-up file-max limit
  ansible.builtin.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  with_items:
    - { name: "fs.file-max", value: 1048576 }
    - { name: "fs.inotify.max_user_instances", value: 2048 }
    - { name: "fs.inotify.max_user_watches", value: 1048576 }

- name: install packages
  ansible.builtin.apt:
    pkg:
    - qemu-guest-agent
    - vim
    - bind9-utils
    - atop
    - python-is-python3
    - byobu
    state: present
    update_cache: yes
    lock_timeout: 300

- name: start and enable qemu-guest-agent
  ansible.builtin.systemd:
    name: qemu-guest-agent
    state: started
    enabled: yes
  #TODO: should check host's provider, not global one, sth like iac.providers[host.provider.name].type == "libvirt"
  when: iac.providers[0].type is defined and iac.providers[0].type == "libvirt"

- name: create /etc/cron.hourly
  ansible.builtin.file:
    path: /etc/cron.hourly
    state: directory
    mode: '0755'

- name: get dns-update.sh
  ansible.builtin.get_url:
    url: 'http://192.168.0.2:8765/dns-update.sh'
    dest: '/etc/cron.hourly/dns-update.sh'
    mode: '0700'
  notify: update dns
  when: '"tag_ansible_group=oci" not in group_names'

- name: crontab dns-update
  ansible.builtin.cron:
    name: dns-update.sh
    special_time: reboot
    job: '/etc/cron.hourly/dns-update.sh'

- name: Set timezone to Europe/Zurich
  community.general.timezone:
    name: Europe/Zurich

- name: set dns
  ansible.builtin.lineinfile:
    dest: /etc/systemd/resolved.conf
    line: "DNS=192.168.0.2"
    regexp: "DNS="
    state: present
  notify: restart resolved

- name: .bash_profile
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/toleksa/configs/main/.bash_profile'
    dest: '/root/.bash_profile'
    mode: '0700'
- name: .bashrc
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/toleksa/configs/main/.bashrc'
    dest: '/root/.bashrc'
    mode: '0700'
- name: .vimrc
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/toleksa/configs/main/.vimrc'
    dest: '/root/.vimrc'
    mode: '0600'

- name: .byobu dir
  ansible.builtin.file:
    path: "/root/.byobu"
    state: directory
    mode: '0700'
- name: .byobu/status
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/toleksa/configs/main/status'
    dest: '/root/.byobu/status'
    mode: '0600'

- name: remove /etc/update-motd.d/
  ansible.builtin.file:
    path: /etc/update-motd.d/
    state: absent

- name: hushlogin
  ansible.builtin.copy:
    content: ""
    dest: /root/.hushlogin
    force: false
    owner: root
    group: root
    mode: 0444

- name: add docker apt key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/trusted.gpg.d/docker.asc
- name: add docker repository
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu jammy stable'
    state: present
    filename: docker
    update_cache: yes

- meta: flush_handlers

