---
# tasks file for argocd

- ansible.builtin.include_role: 
    name: rke2

- name: Waiting for kubernetes to start
  ansible.builtin.shell: |
    until kubectl get nodes | grep -i `hostname` | grep " Ready " ; do
      sleep 5s
      echo -n .
    done
  changed_when: false

- name: helm install argocd
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo-cd/argo-cd
    release_namespace: argocd
    create_namespace: true
  run_once: true

- name: set argocd password
  kubernetes.core.k8s:
    state: patched
    name: argocd-secret
    namespace: argocd
    kind: secret
    definition:
      data:
        admin.password: "JDJhJDEwJHJSeUJzR1NISzYudWM4Zm50UHdWSXVMVkhnc0FoQVg3VGNkcnFXL1JBRFUwdWg3Q2FDaExh" #password
  run_once: true

- name: set argocd password - json way
  kubernetes.core.k8s_json_patch:
    kind: secret
    namespace: argocd
    name: argocd-secret
    patch:
      - op: replace
        path: /data/admin.password 
        value: "JDJhJDEwJHJSeUJzR1NISzYudWM4Zm50UHdWSXVMVkhnc0FoQVg3VGNkcnFXL1JBRFUwdWg3Q2FDaExh" #password
  run_once: true

- name: get argocd binary
  ansible.builtin.get_url:
    url: 'https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64'
    dest: '/usr/local/bin/argocd'
    mode: '0777'

- name: login to argocd
  ansible.builtin.shell: echo "argocd login $(kubectl -n argocd get svc | grep "argocd-server " | gawk '{ print $3 }'):443 --username admin --password password --insecure"
  args:
    executable: /bin/bash
  run_once: true
  changed_when: false
  register: argocd_login_cmd

- name: echo argocd login
  ansible.builtin.debug:
    var: argocd_login_cmd.stdout
  run_once: true

- name: Waiting for argocd project
  ansible.builtin.shell: |
    until argocd proj list | grep default ; do
      sleep 5s
      echo -n .
    done
  changed_when: false
  run_once: true

#- name: debug argocd
#  debug:
#    var: hostvars.localhost.iac

- name: argocd-main.yaml
  template:
    src: argocd-main.yaml
    dest: /argocd-main.yaml


