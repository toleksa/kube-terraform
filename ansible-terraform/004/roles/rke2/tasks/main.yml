---
# tasks file for rke2

- name: set JOIN_ADDR
  ansible.builtin.set_fact:
    JOIN_ADDR: "s0.c0.kube.ac"

- name: debug
  ansible.builtin.debug:
    var: JOIN_ADDR

- name: debug
  ansible.builtin.debug:
    var: ansible_fqdn

- name: debug
  ansible.builtin.debug:
    var: hostvars

#- name: halt
#  fail:
#    msg: "stop"

- ansible.builtin.include_role:
    name: base

- name: install python3-kubernetes
  ansible.builtin.apt:
    pkg: python3-kubernetes
    state: present

- name: create rke2 config dir
  ansible.builtin.file:
    path: /etc/rancher/rke2
    state: directory

- name: rke2 master config
  ansible.builtin.copy:
    dest: "/etc/rancher/rke2/config.yaml"
    content: |
      token: "{{hostvars.localhost.iac.rke2.join_token}}"
      tls-san:
      - "{{JOIN_ADDR}}"
  when: ansible_fqdn == JOIN_ADDR

- name: rke2 config
  ansible.builtin.template:
    src: "config.yaml"
    dest: "/etc/rancher/rke2/config.yaml"
  when: ansible_fqdn != JOIN_ADDR

- name: get rke2 installer
  ansible.builtin.get_url:
    url: https://get.rke2.io
    dest: /tmp/rke2.sh
    mode: 0700

- name: install rke2
  ansible.builtin.command: |
    /tmp/rke2.sh
  args:
    creates: /var/lib/rancher/rke2/bin/kubectl

- block:
  - name: start master rke2
    ansible.builtin.systemd:
      name: rke2-server.service
      state: started
      enabled: yes

  - name: wait for master to be ready
    vars:
      _kubectl: "/var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml"
    ansible.builtin.shell: "{{ _kubectl }} get nodes {{ ansible_fqdn }}|cat"
    changed_when: false
    ignore_errors: "{{ _ignore_errors|default(false) }}"
    register: _get_nodes
    check_mode: false
    until: '" Ready" in _get_nodes.stdout|default("")'
    retries: 120
  when: ansible_fqdn == JOIN_ADDR

- name: wait 60s just in case
  ansible.builtin.pause:
    seconds: 60

- block:
  - name: start rke2
    ansible.builtin.systemd:
      name: rke2-server.service
      state: started
      enabled: yes
    ignore_errors: yes

  - name: wait for nodes to be ready
    vars:
      _kubectl: "/var/lib/rancher/rke2/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml"
    ansible.builtin.shell: "{{ _kubectl }} get nodes {{ ansible_fqdn }}|cat"
    changed_when: false
    ignore_errors: "{{ _ignore_errors|default(false) }}"
    register: _get_nodes
    check_mode: false
    until: '" Ready" in _get_nodes.stdout|default("")'
    retries: 120
  when: ansible_fqdn != JOIN_ADDR

- name: Set ingress as LoadBalancer
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    state: present
    definition:
      apiVersion: helm.cattle.io/v1
      kind: HelmChartConfig
      metadata:
        name: rke2-ingress-nginx
        namespace: kube-system
      spec:
        valuesContent: |-
          controller:
            publishService:
              enabled: true
              pathOverride: kube-system/rke2-ingress-nginx-controller
            service:
              enabled: true
              type: LoadBalancer
  run_once: true

- name: .bash_kube
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/toleksa/configs/main/.bash_kube'
    dest: '/root/.bash_kube'
    mode: '0700'

- name: add .bash_kube to .bashrc
  ansible.builtin.lineinfile:
    path: /root/.bashrc
    regexp: ". ~/.bash_kube"
    line: "    . ~/.bash_kube"

- name: get helm installer
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /tmp/get-helm-3
    mode: 0700

- name: install helm
  ansible.builtin.command: |
    /tmp/get-helm-3
  args:
    creates: /usr/local/bin/helm

- name: helm add repos
  kubernetes.core.helm_repository:
    name: "{{ item.name }}"
    repo_url: "{{ item.url }}"
  with_items:
  - { name: "bitnami",    url: "https://charts.bitnami.com/bitnami" }
  - { name: "helm",       url: "https://charts.helm.sh/stable" }
  - { name: "argo-cd",    url: "https://argoproj.github.io/argo-helm" }
  - { name: "longhorn",   url: "https://charts.longhorn.io" }
  - { name: "monitoring", url: "https://prometheus-community.github.io/helm-charts" }

