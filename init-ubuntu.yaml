- hosts: all
  tasks:
  - name: Set timezone to Europe/Zurich
    community.general.timezone:
      name: Europe/Zurich
  - name: Set 24h date
    command: localectl set-locale LC_TIME="en_GB.UTF-8"
    changed_when: False
  - name: remove unneeded packages
    apt:
      pkg: ['eject','nano','xauth']
      state: absent
  - name: Update and upgrade apt packages
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400 #One day
  - name: autoremove
    apt:
      autoremove: yes
  - name: install packages
    apt:
      pkg: ['qemu-kvm','libvirt-daemon-system','bridge-utils','prometheus-node-exporter','python3-libvirt','python3-lxml']
      state: latest

  - name: get mac address
    set_fact:
      mac: "{{ hostvars[inventory_hostname]['ansible_' + iface]['macaddress'] }}"
  # get all physical ifaces:
  # find /sys/class/net -type l -not -lname '*virtual*' -printf '%f\n'
  - name: upload bridge config
    template:
      src: netplan-bridge.j2
      dest: /etc/netplan/00-installer-config.yaml
      owner: root
      backup: yes
    notify: restart netplan
  - name: mkdir /virtualki
    file:
      path: '/virtualki'
      state: directory
  - name: gather facts on existing virsh pool
    virt_pool:
      command: facts
  - block:
    - name: define default pool
      community.libvirt.virt_pool:
        command: define
        name: default
        xml: '{{ lookup("template", "pool-default.j2") }}'
    - name: refresh facts on existing virsh pool
      virt_pool:
        command: facts
    when: "'default' not in ansible_libvirt_pools"
  - block:
    - name: build default pool
      virt_pool:
        command: build
        name: default
    - name: start default pool
      virt_pool:
        command: create
        name: default
    when: ansible_libvirt_pools['default'].state != "active"
  - name: autostart default pool
    virt_pool:
      autostart: yes
      name: default
  - name: ensure that the pool is active
    virt_pool:
      state: active
      name: default
  - name: apparmor profile for libvirt
    lineinfile:
      dest: /etc/apparmor.d/libvirt/TEMPLATE.qemu
      insertafter: "#include <abstractions/libvirt-qemu>"
      line: "  /virtualki/** rkw,"
      state: present
  - name: disable suspend on lid close
    lineinfile:
      dest: /etc/systemd/logind.conf
      line: "HandleLidSwitch=lock"
      regexp: "HandleLidSwitch="
      state: present
    notify: restart logind
  - name: set dns
    lineinfile:
      dest: /etc/systemd/resolved.conf
      line: "DNS=192.168.0.2"
      regexp: "DNS="
      state: present
    notify: restart resolved
  - name: sshd password auth
    lineinfile:
      dest: /etc/ssh/sshd_config
      line: "PasswordAuthentication yes"
      regexp: "(^|^#)PasswordAuthentication"
    notify: restart sshd
  - name: disable ssh fingerprint check
    lineinfile:
      dest: /etc/ssh/ssh_config
      line: StrictHostKeyChecking no
      regexp: StrictHostKeyChecking
      state: present
  - name: .bash_profile
    get_url:
      url: 'https://raw.githubusercontent.com/toleksa/configs/main/.bash_profile'
      dest: '/root/.bash_profile'
      mode: '0700'
  - name: get dns-update.sh
    get_url: 
      url: 'http://192.168.0.2:8765/dns-update.sh'
      dest: '/etc/cron.hourly/dns-update.sh'
      mode: '0700'
    notify: update dns
  - name: crontab dns-update
    cron:
      name: dns-update.sh
      special_time: reboot
      job: '/etc/cron.hourly/dns-update.sh'
  - name: deploy wol.service
    copy:
      dest: /etc/systemd/system/wol.service
      content: |
        [Unit]
        Description=Enable Wake On Lan
        
        [Service]
        Type=oneshot
        ExecStart = /sbin/ethtool --change {{ iface }} wol g
        
        [Install]
        WantedBy=basic.target
    notify: restart wol.service

  handlers:
  - name: restart netplan
    command: netplan apply
    async: 100
    poll: 0
  - name: restart logind
    systemd:
      name: systemd-logind.service
      state: restarted
  - name: restart resolved
    systemd:
      name: systemd-resolved.service
      state: restarted
  - name: restart sshd
    systemd:
      name: sshd
      state: restarted
  - name: update dns
    shell: /etc/cron.hourly/dns-update.sh
  - name: restart wol.service
    systemd:
      name: wol
      state: restarted
      daemon_reload: yes
      enabled: yes

