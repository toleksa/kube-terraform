---
- name: compress-table
  hosts: postgres
  any_errors_fatal: true

  tasks:
  - name: create extension main
    command: psql -c "CREATE EXTENSION IF NOT EXISTS timescaledb;"
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: create table
    command: psql -c "CREATE TABLE IF NOT EXISTS compress (id SERIAL PRIMARY KEY, num VARCHAR(20), data VARCHAR(20), time TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);" -d test1
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: create hypertable
    command: psql -c "SELECT create_hypertable('compress','id',chunk_time_interval => 600);" -d test1
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: compress-table
    command: psql -c "ALTER TABLE compress SET (timescaledb.compress, timescaledb.compress_segmentby = 'time, data, num', timescaledb.compress_orderby = 'id');" -d test1
    become_user: postgres
    become_method: su
    become: true
    register: compress_result
    when: "'1' in inventory_hostname"

  - name: print compress_result
    debug:
      msg: "{{ compress_result }}"
    when: "'1' in inventory_hostname"

  - name: add compression policy
    command: psql -c "SELECT add_compress_chunks_policy('compress', INTERVAL '10 mins');" -d test1
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: select compression policy
    command: psql -c "SELECT job_id, table_name FROM _timescaledb_config.bgw_policy_compress_chunks p INNER JOIN _timescaledb_catalog.hypertable h ON (h.id = p.hypertable_id);"
    become_user: postgres
    become_method: su
    become: true
    register: select_result
    when: "'1' in inventory_hostname"

  - name: print select_result
    debug:
      msg: "{{ select_result }}"
    when: "'1' in inventory_hostname"

