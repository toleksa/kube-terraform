---
- name: compress-table
  hosts: postgres
  any_errors_fatal: true

  tasks:
  - name: create extension main
    command: psql -c "CREATE EXTENSION IF NOT EXISTS timescaledb;"
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: create table
    command: psql -c "CREATE TABLE IF NOT EXISTS compress (id SERIAL, num bigint, data VARCHAR(20), time TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);" -d test1
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: create hypertable
    command: psql -c "SELECT create_hypertable('compress','time',chunk_time_interval => INTERVAL '1 hour', if_not_exists => TRUE`);" -d test1
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: compress-table
    command: psql -c "ALTER TABLE compress SET (timescaledb.compress, timescaledb.compress_segmentby = 'data', timescaledb.compress_orderby = 'time');" -d test1
    become_user: postgres
    become_method: su
    become: true
    register: compress_result
    when: "'1' in inventory_hostname"

  - name: print compress_result
    debug:
      msg: "{{ compress_result.stderr_lines }}"
    when: "'1' in inventory_hostname"

  - name: add compression policy
    command: psql -c "SELECT add_compress_chunks_policy('compress', INTERVAL '3 hours');" -d test1
    become_user: postgres
    become_method: su
    become: true
    when: "'1' in inventory_hostname"

  - name: select compression policy
    command: psql -c "SELECT job_id, table_name FROM _timescaledb_config.bgw_policy_compress_chunks p INNER JOIN _timescaledb_catalog.hypertable h ON (h.id = p.hypertable_id);" -d test1
    become_user: postgres
    become_method: su
    become: true
    register: select_result
    when: "'1' in inventory_hostname"

  - name: print select_result
    debug:
      msg: "{{ select_result.stdout_lines }}"
    when: "'1' in inventory_hostname"

  - name: create spam.sh
    copy:
      dest: ~/spam.sh
      content: |
        #!/bin/bash
        while true ; do
          psql -c "insert into compress values (default,$(openssl rand 7 | od -DAn | tr -d ' '),'$(($RANDOM % 10))A0B0C0D0E0F',now());" -d test1;
        done
      mode: '0755'
    become_user: postgres
    become_method: su
    become: true

# !!! valid only for timescale 1.7 !!!
# SELECT add_drop_chunks_policy('compress', INTERVAL '24 hours');
# SELECT * FROM timescaledb_information.drop_chunks_policies;
# SELECT alter_job_schedule((SELECT job_id FROM timescaledb_information.drop_chunks_policies WHERE hypertable = 'compress'::regclass), schedule_interval => INTERVAL '1 hour');
# select show_chunks('compress');
# select * from _timescaledb_catalog.hypertable;
# !!! valid only for timescale 1.7 !!!


